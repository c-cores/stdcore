#include <gtest/gtest.h>

#include <std/bits.h>

using namespace core;

TEST(bits, append_char)
{
	bits b;
	EXPECT_EQ(b.size(), 0);
	b << (char)27;
	EXPECT_EQ(b.size(), 1);
	EXPECT_EQ(b[0], 27);
	b << (char)185;
	EXPECT_EQ(b.size(), 2);
	EXPECT_EQ(b[0], 27);
	EXPECT_EQ(b[1], 185);
	b << (char)95;
	EXPECT_EQ(b.size(), 3);
	EXPECT_EQ(b[0], 27);
	EXPECT_EQ(b[1], 185);
	EXPECT_EQ(b[2], 95);
	b << 'd';
	EXPECT_EQ(b.size(), 4);
	EXPECT_EQ(b[0], 27);
	EXPECT_EQ(b[1], 185);
	EXPECT_EQ(b[2], 95);
	EXPECT_EQ(b[3], 'd');
	b << (char)-25;
	EXPECT_EQ(b.size(), 5);
	EXPECT_EQ(b[0], 27);
	EXPECT_EQ(b[1], 185);
	EXPECT_EQ(b[2], 95);
	EXPECT_EQ(b[3], 'd');
	EXPECT_EQ(b[4], 256-25);
}

TEST(bits, append_short)
{
	bits b;
	EXPECT_EQ(b.size(), 0);
	b << (short)15560;
	EXPECT_EQ(b.size(), 2);
	EXPECT_EQ(b[0], 200);
	EXPECT_EQ(b[1], 60);
	b << (short)39;
	EXPECT_EQ(b.size(), 4);
	EXPECT_EQ(b[0], 200);
	EXPECT_EQ(b[1], 60);
	EXPECT_EQ(b[2], 39);
	EXPECT_EQ(b[3], 0);
	b << (short)12852;
	EXPECT_EQ(b.size(), 6);
	EXPECT_EQ(b[0], 200);
	EXPECT_EQ(b[1], 60);
	EXPECT_EQ(b[2], 39);
	EXPECT_EQ(b[3], 0);
	EXPECT_EQ(b[4], 52);
	EXPECT_EQ(b[5], 50);
}

TEST(bits, append_int)
{
	bits b;
	EXPECT_EQ(b.size(), 0);
	b << (int)15560;
	EXPECT_EQ(b.size(), 4);
	EXPECT_EQ(b[0], 200);
	EXPECT_EQ(b[1], 60);
	EXPECT_EQ(b[2], 0);
	EXPECT_EQ(b[3], 0);
	b << (int)39;
	EXPECT_EQ(b.size(), 8);
	EXPECT_EQ(b[0], 200);
	EXPECT_EQ(b[1], 60);
	EXPECT_EQ(b[2], 0);
	EXPECT_EQ(b[3], 0);
	EXPECT_EQ(b[4], 39);
	EXPECT_EQ(b[5], 0);
	EXPECT_EQ(b[6], 0);
	EXPECT_EQ(b[7], 0);
	b << (int)12852;
	EXPECT_EQ(b.size(), 12);
	EXPECT_EQ(b[0], 200);
	EXPECT_EQ(b[1], 60);
	EXPECT_EQ(b[2], 0);
	EXPECT_EQ(b[3], 0);
	EXPECT_EQ(b[4], 39);
	EXPECT_EQ(b[5], 0);
	EXPECT_EQ(b[6], 0);
	EXPECT_EQ(b[7], 0);
	EXPECT_EQ(b[8], 52);
	EXPECT_EQ(b[9], 50);
	EXPECT_EQ(b[10], 0);
	EXPECT_EQ(b[11], 0);
	b << (int)400503055;
	EXPECT_EQ(b.size(), 16);
	EXPECT_EQ(b[0], 200);
	EXPECT_EQ(b[1], 60);
	EXPECT_EQ(b[2], 0);
	EXPECT_EQ(b[3], 0);
	EXPECT_EQ(b[4], 39);
	EXPECT_EQ(b[5], 0);
	EXPECT_EQ(b[6], 0);
	EXPECT_EQ(b[7], 0);
	EXPECT_EQ(b[8], 52);
	EXPECT_EQ(b[9], 50);
	EXPECT_EQ(b[10], 0);
	EXPECT_EQ(b[11], 0);
	EXPECT_EQ(b[12], 15);
	EXPECT_EQ(b[13], 49);
	EXPECT_EQ(b[14], 223);
	EXPECT_EQ(b[15], 23);
}

TEST(bits, append_long)
{
	bits b;
	EXPECT_EQ(b.size(), 0);
	b << (long)15560;
	EXPECT_EQ(b.size(), 8);
	EXPECT_EQ(b[0], 200);
	EXPECT_EQ(b[1], 60);
	EXPECT_EQ(b[2], 0);
	EXPECT_EQ(b[3], 0);
	EXPECT_EQ(b[4], 0);
	EXPECT_EQ(b[5], 0);
	EXPECT_EQ(b[6], 0);
	EXPECT_EQ(b[7], 0);
	b << (long)39;
	EXPECT_EQ(b.size(), 16);
	EXPECT_EQ(b[0], 200);
	EXPECT_EQ(b[1], 60);
	EXPECT_EQ(b[2], 0);
	EXPECT_EQ(b[3], 0);
	EXPECT_EQ(b[4], 0);
	EXPECT_EQ(b[5], 0);
	EXPECT_EQ(b[6], 0);
	EXPECT_EQ(b[7], 0);
	EXPECT_EQ(b[8], 39);
	EXPECT_EQ(b[9], 0);
	EXPECT_EQ(b[10], 0);
	EXPECT_EQ(b[11], 0);
	EXPECT_EQ(b[12], 0);
	EXPECT_EQ(b[13], 0);
	EXPECT_EQ(b[14], 0);
	EXPECT_EQ(b[15], 0);
	b << (long)12852;
	EXPECT_EQ(b.size(), 24);
	EXPECT_EQ(b[0], 200);
	EXPECT_EQ(b[1], 60);
	EXPECT_EQ(b[2], 0);
	EXPECT_EQ(b[3], 0);
	EXPECT_EQ(b[4], 0);
	EXPECT_EQ(b[5], 0);
	EXPECT_EQ(b[6], 0);
	EXPECT_EQ(b[7], 0);
	EXPECT_EQ(b[8], 39);
	EXPECT_EQ(b[9], 0);
	EXPECT_EQ(b[10], 0);
	EXPECT_EQ(b[11], 0);
	EXPECT_EQ(b[12], 0);
	EXPECT_EQ(b[13], 0);
	EXPECT_EQ(b[14], 0);
	EXPECT_EQ(b[15], 0);
	EXPECT_EQ(b[16], 52);
	EXPECT_EQ(b[17], 50);
	EXPECT_EQ(b[18], 0);
	EXPECT_EQ(b[19], 0);
	EXPECT_EQ(b[20], 0);
	EXPECT_EQ(b[21], 0);
	EXPECT_EQ(b[22], 0);
	EXPECT_EQ(b[23], 0);
	b << (long)400503055;
	EXPECT_EQ(b.size(), 32);
	EXPECT_EQ(b[0], 200);
	EXPECT_EQ(b[1], 60);
	EXPECT_EQ(b[2], 0);
	EXPECT_EQ(b[3], 0);
	EXPECT_EQ(b[4], 0);
	EXPECT_EQ(b[5], 0);
	EXPECT_EQ(b[6], 0);
	EXPECT_EQ(b[7], 0);
	EXPECT_EQ(b[8], 39);
	EXPECT_EQ(b[9], 0);
	EXPECT_EQ(b[10], 0);
	EXPECT_EQ(b[11], 0);
	EXPECT_EQ(b[12], 0);
	EXPECT_EQ(b[13], 0);
	EXPECT_EQ(b[14], 0);
	EXPECT_EQ(b[15], 0);
	EXPECT_EQ(b[16], 52);
	EXPECT_EQ(b[17], 50);
	EXPECT_EQ(b[18], 0);
	EXPECT_EQ(b[19], 0);
	EXPECT_EQ(b[20], 0);
	EXPECT_EQ(b[21], 0);
	EXPECT_EQ(b[22], 0);
	EXPECT_EQ(b[23], 0);
	EXPECT_EQ(b[24], 15);
	EXPECT_EQ(b[25], 49);
	EXPECT_EQ(b[26], 223);
	EXPECT_EQ(b[27], 23);
	EXPECT_EQ(b[28], 0);
	EXPECT_EQ(b[29], 0);
	EXPECT_EQ(b[30], 0);
	EXPECT_EQ(b[31], 0);
	b << (long)483957203384827;
	EXPECT_EQ(b.size(), 40);
	EXPECT_EQ(b[0], 200);
	EXPECT_EQ(b[1], 60);
	EXPECT_EQ(b[2], 0);
	EXPECT_EQ(b[3], 0);
	EXPECT_EQ(b[4], 0);
	EXPECT_EQ(b[5], 0);
	EXPECT_EQ(b[6], 0);
	EXPECT_EQ(b[7], 0);
	EXPECT_EQ(b[8], 39);
	EXPECT_EQ(b[9], 0);
	EXPECT_EQ(b[10], 0);
	EXPECT_EQ(b[11], 0);
	EXPECT_EQ(b[12], 0);
	EXPECT_EQ(b[13], 0);
	EXPECT_EQ(b[14], 0);
	EXPECT_EQ(b[15], 0);
	EXPECT_EQ(b[16], 52);
	EXPECT_EQ(b[17], 50);
	EXPECT_EQ(b[18], 0);
	EXPECT_EQ(b[19], 0);
	EXPECT_EQ(b[20], 0);
	EXPECT_EQ(b[21], 0);
	EXPECT_EQ(b[22], 0);
	EXPECT_EQ(b[23], 0);
	EXPECT_EQ(b[24], 15);
	EXPECT_EQ(b[25], 49);
	EXPECT_EQ(b[26], 223);
	EXPECT_EQ(b[27], 23);
	EXPECT_EQ(b[28], 0);
	EXPECT_EQ(b[29], 0);
	EXPECT_EQ(b[30], 0);
	EXPECT_EQ(b[31], 0);
	EXPECT_EQ(b[32], 251);
	EXPECT_EQ(b[33], 185);
	EXPECT_EQ(b[34], 49);
	EXPECT_EQ(b[35], 17);
	EXPECT_EQ(b[36], 40);
	EXPECT_EQ(b[37], 184);
	EXPECT_EQ(b[38], 1);
	EXPECT_EQ(b[39], 0);
}

TEST(bits, append_long_long)
{
	bits b;
	EXPECT_EQ(b.size(), 0);
	b << (long long)15560;
	EXPECT_EQ(b.size(), 8);
	EXPECT_EQ(b[0], 200);
	EXPECT_EQ(b[1], 60);
	EXPECT_EQ(b[2], 0);
	EXPECT_EQ(b[3], 0);
	EXPECT_EQ(b[4], 0);
	EXPECT_EQ(b[5], 0);
	EXPECT_EQ(b[6], 0);
	EXPECT_EQ(b[7], 0);
	b << (long long)39;
	EXPECT_EQ(b.size(), 16);
	EXPECT_EQ(b[0], 200);
	EXPECT_EQ(b[1], 60);
	EXPECT_EQ(b[2], 0);
	EXPECT_EQ(b[3], 0);
	EXPECT_EQ(b[4], 0);
	EXPECT_EQ(b[5], 0);
	EXPECT_EQ(b[6], 0);
	EXPECT_EQ(b[7], 0);
	EXPECT_EQ(b[8], 39);
	EXPECT_EQ(b[9], 0);
	EXPECT_EQ(b[10], 0);
	EXPECT_EQ(b[11], 0);
	EXPECT_EQ(b[12], 0);
	EXPECT_EQ(b[13], 0);
	EXPECT_EQ(b[14], 0);
	EXPECT_EQ(b[15], 0);
	b << (long long)12852;
	EXPECT_EQ(b.size(), 24);
	EXPECT_EQ(b[0], 200);
	EXPECT_EQ(b[1], 60);
	EXPECT_EQ(b[2], 0);
	EXPECT_EQ(b[3], 0);
	EXPECT_EQ(b[4], 0);
	EXPECT_EQ(b[5], 0);
	EXPECT_EQ(b[6], 0);
	EXPECT_EQ(b[7], 0);
	EXPECT_EQ(b[8], 39);
	EXPECT_EQ(b[9], 0);
	EXPECT_EQ(b[10], 0);
	EXPECT_EQ(b[11], 0);
	EXPECT_EQ(b[12], 0);
	EXPECT_EQ(b[13], 0);
	EXPECT_EQ(b[14], 0);
	EXPECT_EQ(b[15], 0);
	EXPECT_EQ(b[16], 52);
	EXPECT_EQ(b[17], 50);
	EXPECT_EQ(b[18], 0);
	EXPECT_EQ(b[19], 0);
	EXPECT_EQ(b[20], 0);
	EXPECT_EQ(b[21], 0);
	EXPECT_EQ(b[22], 0);
	EXPECT_EQ(b[23], 0);
	b << (long long)400503055;
	EXPECT_EQ(b.size(), 32);
	EXPECT_EQ(b[0], 200);
	EXPECT_EQ(b[1], 60);
	EXPECT_EQ(b[2], 0);
	EXPECT_EQ(b[3], 0);
	EXPECT_EQ(b[4], 0);
	EXPECT_EQ(b[5], 0);
	EXPECT_EQ(b[6], 0);
	EXPECT_EQ(b[7], 0);
	EXPECT_EQ(b[8], 39);
	EXPECT_EQ(b[9], 0);
	EXPECT_EQ(b[10], 0);
	EXPECT_EQ(b[11], 0);
	EXPECT_EQ(b[12], 0);
	EXPECT_EQ(b[13], 0);
	EXPECT_EQ(b[14], 0);
	EXPECT_EQ(b[15], 0);
	EXPECT_EQ(b[16], 52);
	EXPECT_EQ(b[17], 50);
	EXPECT_EQ(b[18], 0);
	EXPECT_EQ(b[19], 0);
	EXPECT_EQ(b[20], 0);
	EXPECT_EQ(b[21], 0);
	EXPECT_EQ(b[22], 0);
	EXPECT_EQ(b[23], 0);
	EXPECT_EQ(b[24], 15);
	EXPECT_EQ(b[25], 49);
	EXPECT_EQ(b[26], 223);
	EXPECT_EQ(b[27], 23);
	EXPECT_EQ(b[28], 0);
	EXPECT_EQ(b[29], 0);
	EXPECT_EQ(b[30], 0);
	EXPECT_EQ(b[31], 0);
	b << (long long)483957203384827;
	EXPECT_EQ(b.size(), 40);
	EXPECT_EQ(b[0], 200);
	EXPECT_EQ(b[1], 60);
	EXPECT_EQ(b[2], 0);
	EXPECT_EQ(b[3], 0);
	EXPECT_EQ(b[4], 0);
	EXPECT_EQ(b[5], 0);
	EXPECT_EQ(b[6], 0);
	EXPECT_EQ(b[7], 0);
	EXPECT_EQ(b[8], 39);
	EXPECT_EQ(b[9], 0);
	EXPECT_EQ(b[10], 0);
	EXPECT_EQ(b[11], 0);
	EXPECT_EQ(b[12], 0);
	EXPECT_EQ(b[13], 0);
	EXPECT_EQ(b[14], 0);
	EXPECT_EQ(b[15], 0);
	EXPECT_EQ(b[16], 52);
	EXPECT_EQ(b[17], 50);
	EXPECT_EQ(b[18], 0);
	EXPECT_EQ(b[19], 0);
	EXPECT_EQ(b[20], 0);
	EXPECT_EQ(b[21], 0);
	EXPECT_EQ(b[22], 0);
	EXPECT_EQ(b[23], 0);
	EXPECT_EQ(b[24], 15);
	EXPECT_EQ(b[25], 49);
	EXPECT_EQ(b[26], 223);
	EXPECT_EQ(b[27], 23);
	EXPECT_EQ(b[28], 0);
	EXPECT_EQ(b[29], 0);
	EXPECT_EQ(b[30], 0);
	EXPECT_EQ(b[31], 0);
	EXPECT_EQ(b[32], 251);
	EXPECT_EQ(b[33], 185);
	EXPECT_EQ(b[34], 49);
	EXPECT_EQ(b[35], 17);
	EXPECT_EQ(b[36], 40);
	EXPECT_EQ(b[37], 184);
	EXPECT_EQ(b[38], 1);
	EXPECT_EQ(b[39], 0);
}

TEST(bits, append_unsigned_char)
{
	bits b;
	EXPECT_EQ(b.size(), 0);
	b << (unsigned char)27;
	EXPECT_EQ(b.size(), 1);
	EXPECT_EQ(b[0], 27);
	b << (unsigned char)185;
	EXPECT_EQ(b.size(), 2);
	EXPECT_EQ(b[0], 27);
	EXPECT_EQ(b[1], 185);
	b << (unsigned char)95;
	EXPECT_EQ(b.size(), 3);
	EXPECT_EQ(b[0], 27);
	EXPECT_EQ(b[1], 185);
	EXPECT_EQ(b[2], 95);
	b << (unsigned char)'d';
	EXPECT_EQ(b.size(), 4);
	EXPECT_EQ(b[0], 27);
	EXPECT_EQ(b[1], 185);
	EXPECT_EQ(b[2], 95);
	EXPECT_EQ(b[3], 'd');
	b << (unsigned char)-25;
	EXPECT_EQ(b.size(), 5);
	EXPECT_EQ(b[0], 27);
	EXPECT_EQ(b[1], 185);
	EXPECT_EQ(b[2], 95);
	EXPECT_EQ(b[3], 'd');
	EXPECT_EQ(b[4], 256-25);
}

TEST(bits, append_unsigned_short)
{
	bits b;
	EXPECT_EQ(b.size(), 0);
	b << (unsigned short)15560;
	EXPECT_EQ(b.size(), 2);
	EXPECT_EQ(b[0], 200);
	EXPECT_EQ(b[1], 60);
	b << (unsigned short)39;
	EXPECT_EQ(b.size(), 4);
	EXPECT_EQ(b[0], 200);
	EXPECT_EQ(b[1], 60);
	EXPECT_EQ(b[2], 39);
	EXPECT_EQ(b[3], 0);
	b << (unsigned short)12852;
	EXPECT_EQ(b.size(), 6);
	EXPECT_EQ(b[0], 200);
	EXPECT_EQ(b[1], 60);
	EXPECT_EQ(b[2], 39);
	EXPECT_EQ(b[3], 0);
	EXPECT_EQ(b[4], 52);
	EXPECT_EQ(b[5], 50);
}

TEST(bits, append_unsigned_int)
{
	bits b;
	EXPECT_EQ(b.size(), 0);
	b << (unsigned int)15560;
	EXPECT_EQ(b.size(), 4);
	EXPECT_EQ(b[0], 200);
	EXPECT_EQ(b[1], 60);
	EXPECT_EQ(b[2], 0);
	EXPECT_EQ(b[3], 0);
	b << (unsigned int)39;
	EXPECT_EQ(b.size(), 8);
	EXPECT_EQ(b[0], 200);
	EXPECT_EQ(b[1], 60);
	EXPECT_EQ(b[2], 0);
	EXPECT_EQ(b[3], 0);
	EXPECT_EQ(b[4], 39);
	EXPECT_EQ(b[5], 0);
	EXPECT_EQ(b[6], 0);
	EXPECT_EQ(b[7], 0);
	b << (unsigned int)12852;
	EXPECT_EQ(b.size(), 12);
	EXPECT_EQ(b[0], 200);
	EXPECT_EQ(b[1], 60);
	EXPECT_EQ(b[2], 0);
	EXPECT_EQ(b[3], 0);
	EXPECT_EQ(b[4], 39);
	EXPECT_EQ(b[5], 0);
	EXPECT_EQ(b[6], 0);
	EXPECT_EQ(b[7], 0);
	EXPECT_EQ(b[8], 52);
	EXPECT_EQ(b[9], 50);
	EXPECT_EQ(b[10], 0);
	EXPECT_EQ(b[11], 0);
	b << (unsigned int)400503055;
	EXPECT_EQ(b.size(), 16);
	EXPECT_EQ(b[0], 200);
	EXPECT_EQ(b[1], 60);
	EXPECT_EQ(b[2], 0);
	EXPECT_EQ(b[3], 0);
	EXPECT_EQ(b[4], 39);
	EXPECT_EQ(b[5], 0);
	EXPECT_EQ(b[6], 0);
	EXPECT_EQ(b[7], 0);
	EXPECT_EQ(b[8], 52);
	EXPECT_EQ(b[9], 50);
	EXPECT_EQ(b[10], 0);
	EXPECT_EQ(b[11], 0);
	EXPECT_EQ(b[12], 15);
	EXPECT_EQ(b[13], 49);
	EXPECT_EQ(b[14], 223);
	EXPECT_EQ(b[15], 23);
}

TEST(bits, append_unsigned_long)
{
	bits b;
	EXPECT_EQ(b.size(), 0);
	b << (unsigned long)15560;
	EXPECT_EQ(b.size(), 8);
	EXPECT_EQ(b[0], 200);
	EXPECT_EQ(b[1], 60);
	EXPECT_EQ(b[2], 0);
	EXPECT_EQ(b[3], 0);
	EXPECT_EQ(b[4], 0);
	EXPECT_EQ(b[5], 0);
	EXPECT_EQ(b[6], 0);
	EXPECT_EQ(b[7], 0);
	b << (unsigned long)39;
	EXPECT_EQ(b.size(), 16);
	EXPECT_EQ(b[0], 200);
	EXPECT_EQ(b[1], 60);
	EXPECT_EQ(b[2], 0);
	EXPECT_EQ(b[3], 0);
	EXPECT_EQ(b[4], 0);
	EXPECT_EQ(b[5], 0);
	EXPECT_EQ(b[6], 0);
	EXPECT_EQ(b[7], 0);
	EXPECT_EQ(b[8], 39);
	EXPECT_EQ(b[9], 0);
	EXPECT_EQ(b[10], 0);
	EXPECT_EQ(b[11], 0);
	EXPECT_EQ(b[12], 0);
	EXPECT_EQ(b[13], 0);
	EXPECT_EQ(b[14], 0);
	EXPECT_EQ(b[15], 0);
	b << (unsigned long)12852;
	EXPECT_EQ(b.size(), 24);
	EXPECT_EQ(b[0], 200);
	EXPECT_EQ(b[1], 60);
	EXPECT_EQ(b[2], 0);
	EXPECT_EQ(b[3], 0);
	EXPECT_EQ(b[4], 0);
	EXPECT_EQ(b[5], 0);
	EXPECT_EQ(b[6], 0);
	EXPECT_EQ(b[7], 0);
	EXPECT_EQ(b[8], 39);
	EXPECT_EQ(b[9], 0);
	EXPECT_EQ(b[10], 0);
	EXPECT_EQ(b[11], 0);
	EXPECT_EQ(b[12], 0);
	EXPECT_EQ(b[13], 0);
	EXPECT_EQ(b[14], 0);
	EXPECT_EQ(b[15], 0);
	EXPECT_EQ(b[16], 52);
	EXPECT_EQ(b[17], 50);
	EXPECT_EQ(b[18], 0);
	EXPECT_EQ(b[19], 0);
	EXPECT_EQ(b[20], 0);
	EXPECT_EQ(b[21], 0);
	EXPECT_EQ(b[22], 0);
	EXPECT_EQ(b[23], 0);
	b << (unsigned long)400503055;
	EXPECT_EQ(b.size(), 32);
	EXPECT_EQ(b[0], 200);
	EXPECT_EQ(b[1], 60);
	EXPECT_EQ(b[2], 0);
	EXPECT_EQ(b[3], 0);
	EXPECT_EQ(b[4], 0);
	EXPECT_EQ(b[5], 0);
	EXPECT_EQ(b[6], 0);
	EXPECT_EQ(b[7], 0);
	EXPECT_EQ(b[8], 39);
	EXPECT_EQ(b[9], 0);
	EXPECT_EQ(b[10], 0);
	EXPECT_EQ(b[11], 0);
	EXPECT_EQ(b[12], 0);
	EXPECT_EQ(b[13], 0);
	EXPECT_EQ(b[14], 0);
	EXPECT_EQ(b[15], 0);
	EXPECT_EQ(b[16], 52);
	EXPECT_EQ(b[17], 50);
	EXPECT_EQ(b[18], 0);
	EXPECT_EQ(b[19], 0);
	EXPECT_EQ(b[20], 0);
	EXPECT_EQ(b[21], 0);
	EXPECT_EQ(b[22], 0);
	EXPECT_EQ(b[23], 0);
	EXPECT_EQ(b[24], 15);
	EXPECT_EQ(b[25], 49);
	EXPECT_EQ(b[26], 223);
	EXPECT_EQ(b[27], 23);
	EXPECT_EQ(b[28], 0);
	EXPECT_EQ(b[29], 0);
	EXPECT_EQ(b[30], 0);
	EXPECT_EQ(b[31], 0);
	b << (unsigned long)483957203384827;
	EXPECT_EQ(b.size(), 40);
	EXPECT_EQ(b[0], 200);
	EXPECT_EQ(b[1], 60);
	EXPECT_EQ(b[2], 0);
	EXPECT_EQ(b[3], 0);
	EXPECT_EQ(b[4], 0);
	EXPECT_EQ(b[5], 0);
	EXPECT_EQ(b[6], 0);
	EXPECT_EQ(b[7], 0);
	EXPECT_EQ(b[8], 39);
	EXPECT_EQ(b[9], 0);
	EXPECT_EQ(b[10], 0);
	EXPECT_EQ(b[11], 0);
	EXPECT_EQ(b[12], 0);
	EXPECT_EQ(b[13], 0);
	EXPECT_EQ(b[14], 0);
	EXPECT_EQ(b[15], 0);
	EXPECT_EQ(b[16], 52);
	EXPECT_EQ(b[17], 50);
	EXPECT_EQ(b[18], 0);
	EXPECT_EQ(b[19], 0);
	EXPECT_EQ(b[20], 0);
	EXPECT_EQ(b[21], 0);
	EXPECT_EQ(b[22], 0);
	EXPECT_EQ(b[23], 0);
	EXPECT_EQ(b[24], 15);
	EXPECT_EQ(b[25], 49);
	EXPECT_EQ(b[26], 223);
	EXPECT_EQ(b[27], 23);
	EXPECT_EQ(b[28], 0);
	EXPECT_EQ(b[29], 0);
	EXPECT_EQ(b[30], 0);
	EXPECT_EQ(b[31], 0);
	EXPECT_EQ(b[32], 251);
	EXPECT_EQ(b[33], 185);
	EXPECT_EQ(b[34], 49);
	EXPECT_EQ(b[35], 17);
	EXPECT_EQ(b[36], 40);
	EXPECT_EQ(b[37], 184);
	EXPECT_EQ(b[38], 1);
	EXPECT_EQ(b[39], 0);
}

TEST(bits, append_unsigned_long_long)
{
	bits b;
	EXPECT_EQ(b.size(), 0);
	b << (unsigned long long)15560;
	EXPECT_EQ(b.size(), 8);
	EXPECT_EQ(b[0], 200);
	EXPECT_EQ(b[1], 60);
	EXPECT_EQ(b[2], 0);
	EXPECT_EQ(b[3], 0);
	EXPECT_EQ(b[4], 0);
	EXPECT_EQ(b[5], 0);
	EXPECT_EQ(b[6], 0);
	EXPECT_EQ(b[7], 0);
	b << (unsigned long long)39;
	EXPECT_EQ(b.size(), 16);
	EXPECT_EQ(b[0], 200);
	EXPECT_EQ(b[1], 60);
	EXPECT_EQ(b[2], 0);
	EXPECT_EQ(b[3], 0);
	EXPECT_EQ(b[4], 0);
	EXPECT_EQ(b[5], 0);
	EXPECT_EQ(b[6], 0);
	EXPECT_EQ(b[7], 0);
	EXPECT_EQ(b[8], 39);
	EXPECT_EQ(b[9], 0);
	EXPECT_EQ(b[10], 0);
	EXPECT_EQ(b[11], 0);
	EXPECT_EQ(b[12], 0);
	EXPECT_EQ(b[13], 0);
	EXPECT_EQ(b[14], 0);
	EXPECT_EQ(b[15], 0);
	b << (unsigned long long)12852;
	EXPECT_EQ(b.size(), 24);
	EXPECT_EQ(b[0], 200);
	EXPECT_EQ(b[1], 60);
	EXPECT_EQ(b[2], 0);
	EXPECT_EQ(b[3], 0);
	EXPECT_EQ(b[4], 0);
	EXPECT_EQ(b[5], 0);
	EXPECT_EQ(b[6], 0);
	EXPECT_EQ(b[7], 0);
	EXPECT_EQ(b[8], 39);
	EXPECT_EQ(b[9], 0);
	EXPECT_EQ(b[10], 0);
	EXPECT_EQ(b[11], 0);
	EXPECT_EQ(b[12], 0);
	EXPECT_EQ(b[13], 0);
	EXPECT_EQ(b[14], 0);
	EXPECT_EQ(b[15], 0);
	EXPECT_EQ(b[16], 52);
	EXPECT_EQ(b[17], 50);
	EXPECT_EQ(b[18], 0);
	EXPECT_EQ(b[19], 0);
	EXPECT_EQ(b[20], 0);
	EXPECT_EQ(b[21], 0);
	EXPECT_EQ(b[22], 0);
	EXPECT_EQ(b[23], 0);
	b << (unsigned long long)400503055;
	EXPECT_EQ(b.size(), 32);
	EXPECT_EQ(b[0], 200);
	EXPECT_EQ(b[1], 60);
	EXPECT_EQ(b[2], 0);
	EXPECT_EQ(b[3], 0);
	EXPECT_EQ(b[4], 0);
	EXPECT_EQ(b[5], 0);
	EXPECT_EQ(b[6], 0);
	EXPECT_EQ(b[7], 0);
	EXPECT_EQ(b[8], 39);
	EXPECT_EQ(b[9], 0);
	EXPECT_EQ(b[10], 0);
	EXPECT_EQ(b[11], 0);
	EXPECT_EQ(b[12], 0);
	EXPECT_EQ(b[13], 0);
	EXPECT_EQ(b[14], 0);
	EXPECT_EQ(b[15], 0);
	EXPECT_EQ(b[16], 52);
	EXPECT_EQ(b[17], 50);
	EXPECT_EQ(b[18], 0);
	EXPECT_EQ(b[19], 0);
	EXPECT_EQ(b[20], 0);
	EXPECT_EQ(b[21], 0);
	EXPECT_EQ(b[22], 0);
	EXPECT_EQ(b[23], 0);
	EXPECT_EQ(b[24], 15);
	EXPECT_EQ(b[25], 49);
	EXPECT_EQ(b[26], 223);
	EXPECT_EQ(b[27], 23);
	EXPECT_EQ(b[28], 0);
	EXPECT_EQ(b[29], 0);
	EXPECT_EQ(b[30], 0);
	EXPECT_EQ(b[31], 0);
	b << (unsigned long long)483957203384827;
	EXPECT_EQ(b.size(), 40);
	EXPECT_EQ(b[0], 200);
	EXPECT_EQ(b[1], 60);
	EXPECT_EQ(b[2], 0);
	EXPECT_EQ(b[3], 0);
	EXPECT_EQ(b[4], 0);
	EXPECT_EQ(b[5], 0);
	EXPECT_EQ(b[6], 0);
	EXPECT_EQ(b[7], 0);
	EXPECT_EQ(b[8], 39);
	EXPECT_EQ(b[9], 0);
	EXPECT_EQ(b[10], 0);
	EXPECT_EQ(b[11], 0);
	EXPECT_EQ(b[12], 0);
	EXPECT_EQ(b[13], 0);
	EXPECT_EQ(b[14], 0);
	EXPECT_EQ(b[15], 0);
	EXPECT_EQ(b[16], 52);
	EXPECT_EQ(b[17], 50);
	EXPECT_EQ(b[18], 0);
	EXPECT_EQ(b[19], 0);
	EXPECT_EQ(b[20], 0);
	EXPECT_EQ(b[21], 0);
	EXPECT_EQ(b[22], 0);
	EXPECT_EQ(b[23], 0);
	EXPECT_EQ(b[24], 15);
	EXPECT_EQ(b[25], 49);
	EXPECT_EQ(b[26], 223);
	EXPECT_EQ(b[27], 23);
	EXPECT_EQ(b[28], 0);
	EXPECT_EQ(b[29], 0);
	EXPECT_EQ(b[30], 0);
	EXPECT_EQ(b[31], 0);
	EXPECT_EQ(b[32], 251);
	EXPECT_EQ(b[33], 185);
	EXPECT_EQ(b[34], 49);
	EXPECT_EQ(b[35], 17);
	EXPECT_EQ(b[36], 40);
	EXPECT_EQ(b[37], 184);
	EXPECT_EQ(b[38], 1);
	EXPECT_EQ(b[39], 0);
}

TEST(bits, append_bool)
{
	bits b;
	EXPECT_EQ(b.size(), 0);
	b << false;
	EXPECT_EQ(b.size(), 1);
	EXPECT_EQ(b[0], 0);
	b << true;
	EXPECT_EQ(b.size(), 2);
	EXPECT_EQ(b[0], 0);
	EXPECT_EQ(b[1], 1);
}

TEST(bits, append_float)
{
	bits b;
	EXPECT_EQ(b.size(), 0);
	b << (float)23.542;
	EXPECT_EQ(b.size(), 4);
	EXPECT_EQ(b[0], 0x04);
	EXPECT_EQ(b[1], 0x56);
	EXPECT_EQ(b[2], 0xBC);
	EXPECT_EQ(b[3], 0x41);
	b << (float)39.9374;
	EXPECT_EQ(b.size(), 8);
	EXPECT_EQ(b[0], 0x04);
	EXPECT_EQ(b[1], 0x56);
	EXPECT_EQ(b[2], 0xBC);
	EXPECT_EQ(b[3], 0x41);
	EXPECT_EQ(b[4], 0xE6);
	EXPECT_EQ(b[5], 0xBF);
	EXPECT_EQ(b[6], 0x1F);
	EXPECT_EQ(b[7], 0x42);
	b << (float)12852.02837;
	EXPECT_EQ(b.size(), 12);
	EXPECT_EQ(b[0], 0x04);
	EXPECT_EQ(b[1], 0x56);
	EXPECT_EQ(b[2], 0xBC);
	EXPECT_EQ(b[3], 0x41);
	EXPECT_EQ(b[4], 0xE6);
	EXPECT_EQ(b[5], 0xBF);
	EXPECT_EQ(b[6], 0x1F);
	EXPECT_EQ(b[7], 0x42);
	EXPECT_EQ(b[8], 0x1D);
	EXPECT_EQ(b[9], 0xD0);
	EXPECT_EQ(b[10], 0x48);
	EXPECT_EQ(b[11], 0x46);
	b << (float)2948.048382;
	EXPECT_EQ(b.size(), 16);
	EXPECT_EQ(b[0], 0x04);
	EXPECT_EQ(b[1], 0x56);
	EXPECT_EQ(b[2], 0xBC);
	EXPECT_EQ(b[3], 0x41);
	EXPECT_EQ(b[4], 0xE6);
	EXPECT_EQ(b[5], 0xBF);
	EXPECT_EQ(b[6], 0x1F);
	EXPECT_EQ(b[7], 0x42);
	EXPECT_EQ(b[8], 0x1D);
	EXPECT_EQ(b[9], 0xD0);
	EXPECT_EQ(b[10], 0x48);
	EXPECT_EQ(b[11], 0x46);
	EXPECT_EQ(b[12], 0xC6);
	EXPECT_EQ(b[13], 0x40);
	EXPECT_EQ(b[14], 0x38);
	EXPECT_EQ(b[15], 0x45);
}

TEST(bits, append_double)
{
	bits b;
	EXPECT_EQ(b.size(), 0);
	b << (double)23.542;
	EXPECT_EQ(b.size(), 8);
	EXPECT_EQ(b[0], 0x98);
	EXPECT_EQ(b[1], 0x6E);
	EXPECT_EQ(b[2], 0x12);
	EXPECT_EQ(b[3], 0x83);
	EXPECT_EQ(b[4], 0xC0);
	EXPECT_EQ(b[5], 0x8A);
	EXPECT_EQ(b[6], 0x37);
	EXPECT_EQ(b[7], 0x40);
	b << (double)39.9374;
	EXPECT_EQ(b.size(), 16);
	EXPECT_EQ(b[0], 0x98);
	EXPECT_EQ(b[1], 0x6E);
	EXPECT_EQ(b[2], 0x12);
	EXPECT_EQ(b[3], 0x83);
	EXPECT_EQ(b[4], 0xC0);
	EXPECT_EQ(b[5], 0x8A);
	EXPECT_EQ(b[6], 0x37);
	EXPECT_EQ(b[7], 0x40);
	EXPECT_EQ(b[8], 0x9C);
	EXPECT_EQ(b[9], 0xA2);
	EXPECT_EQ(b[10], 0x23);
	EXPECT_EQ(b[11], 0xB9);
	EXPECT_EQ(b[12], 0xFC);
	EXPECT_EQ(b[13], 0xF7);
	EXPECT_EQ(b[14], 0x43);
	EXPECT_EQ(b[15], 0x40);
	b << (double)12852.02837;
	EXPECT_EQ(b.size(), 24);
	EXPECT_EQ(b[0], 0x98);
	EXPECT_EQ(b[1], 0x6E);
	EXPECT_EQ(b[2], 0x12);
	EXPECT_EQ(b[3], 0x83);
	EXPECT_EQ(b[4], 0xC0);
	EXPECT_EQ(b[5], 0x8A);
	EXPECT_EQ(b[6], 0x37);
	EXPECT_EQ(b[7], 0x40);
	EXPECT_EQ(b[8], 0x9C);
	EXPECT_EQ(b[9], 0xA2);
	EXPECT_EQ(b[10], 0x23);
	EXPECT_EQ(b[11], 0xB9);
	EXPECT_EQ(b[12], 0xFC);
	EXPECT_EQ(b[13], 0xF7);
	EXPECT_EQ(b[14], 0x43);
	EXPECT_EQ(b[15], 0x40);
	EXPECT_EQ(b[16], 0x18);
	EXPECT_EQ(b[17], 0xCF);
	EXPECT_EQ(b[18], 0xA0);
	EXPECT_EQ(b[19], 0xA1);
	EXPECT_EQ(b[20], 0x03);
	EXPECT_EQ(b[21], 0x1A);
	EXPECT_EQ(b[22], 0xC9);
	EXPECT_EQ(b[23], 0x40);
	b << (double)2948.048382;
	EXPECT_EQ(b.size(), 32);
	EXPECT_EQ(b[0], 0x98);
	EXPECT_EQ(b[1], 0x6E);
	EXPECT_EQ(b[2], 0x12);
	EXPECT_EQ(b[3], 0x83);
	EXPECT_EQ(b[4], 0xC0);
	EXPECT_EQ(b[5], 0x8A);
	EXPECT_EQ(b[6], 0x37);
	EXPECT_EQ(b[7], 0x40);
	EXPECT_EQ(b[8], 0x9C);
	EXPECT_EQ(b[9], 0xA2);
	EXPECT_EQ(b[10], 0x23);
	EXPECT_EQ(b[11], 0xB9);
	EXPECT_EQ(b[12], 0xFC);
	EXPECT_EQ(b[13], 0xF7);
	EXPECT_EQ(b[14], 0x43);
	EXPECT_EQ(b[15], 0x40);
	EXPECT_EQ(b[16], 0x18);
	EXPECT_EQ(b[17], 0xCF);
	EXPECT_EQ(b[18], 0xA0);
	EXPECT_EQ(b[19], 0xA1);
	EXPECT_EQ(b[20], 0x03);
	EXPECT_EQ(b[21], 0x1A);
	EXPECT_EQ(b[22], 0xC9);
	EXPECT_EQ(b[23], 0x40);
	EXPECT_EQ(b[24], 0x6E);
	EXPECT_EQ(b[25], 0x87);
	EXPECT_EQ(b[26], 0x86);
	EXPECT_EQ(b[27], 0xC5);
	EXPECT_EQ(b[28], 0x18);
	EXPECT_EQ(b[29], 0x08);
	EXPECT_EQ(b[30], 0xA7);
	EXPECT_EQ(b[31], 0x40);
}

TEST(bits, append_const_char_array)
{
	bits b;
	EXPECT_EQ(b.size(), 0);
	b << (const char*)"I'm a string!";
	EXPECT_EQ(b.size(), 13);
	EXPECT_EQ(b[0], 'I');
	EXPECT_EQ(b[1], '\'');
	EXPECT_EQ(b[2], 'm');
	EXPECT_EQ(b[3], ' ');
	EXPECT_EQ(b[4], 'a');
	EXPECT_EQ(b[5], ' ');
	EXPECT_EQ(b[6], 's');
	EXPECT_EQ(b[7], 't');
	EXPECT_EQ(b[8], 'r');
	EXPECT_EQ(b[9], 'i');
	EXPECT_EQ(b[10], 'n');
	EXPECT_EQ(b[11], 'g');
	EXPECT_EQ(b[12], '!');
	b << (const char*)" You aren't.";
	EXPECT_EQ(b.size(), 25);
	EXPECT_EQ(b[0], 'I');
	EXPECT_EQ(b[1], '\'');
	EXPECT_EQ(b[2], 'm');
	EXPECT_EQ(b[3], ' ');
	EXPECT_EQ(b[4], 'a');
	EXPECT_EQ(b[5], ' ');
	EXPECT_EQ(b[6], 's');
	EXPECT_EQ(b[7], 't');
	EXPECT_EQ(b[8], 'r');
	EXPECT_EQ(b[9], 'i');
	EXPECT_EQ(b[10], 'n');
	EXPECT_EQ(b[11], 'g');
	EXPECT_EQ(b[12], '!');
	EXPECT_EQ(b[13], ' ');
	EXPECT_EQ(b[14], 'Y');
	EXPECT_EQ(b[15], 'o');
	EXPECT_EQ(b[16], 'u');
	EXPECT_EQ(b[17], ' ');
	EXPECT_EQ(b[18], 'a');
	EXPECT_EQ(b[19], 'r');
	EXPECT_EQ(b[20], 'e');
	EXPECT_EQ(b[21], 'n');
	EXPECT_EQ(b[22], '\'');
	EXPECT_EQ(b[23], 't');
	EXPECT_EQ(b[24], '.');
}

TEST(bits, append_char_array)
{
	bits b;
	EXPECT_EQ(b.size(), 0);
	b << (char*)"I'm a string!";
	EXPECT_EQ(b.size(), 13);
	EXPECT_EQ(b[0], 'I');
	EXPECT_EQ(b[1], '\'');
	EXPECT_EQ(b[2], 'm');
	EXPECT_EQ(b[3], ' ');
	EXPECT_EQ(b[4], 'a');
	EXPECT_EQ(b[5], ' ');
	EXPECT_EQ(b[6], 's');
	EXPECT_EQ(b[7], 't');
	EXPECT_EQ(b[8], 'r');
	EXPECT_EQ(b[9], 'i');
	EXPECT_EQ(b[10], 'n');
	EXPECT_EQ(b[11], 'g');
	EXPECT_EQ(b[12], '!');
	b << (char*)" You aren't.";
	EXPECT_EQ(b.size(), 25);
	EXPECT_EQ(b[0], 'I');
	EXPECT_EQ(b[1], '\'');
	EXPECT_EQ(b[2], 'm');
	EXPECT_EQ(b[3], ' ');
	EXPECT_EQ(b[4], 'a');
	EXPECT_EQ(b[5], ' ');
	EXPECT_EQ(b[6], 's');
	EXPECT_EQ(b[7], 't');
	EXPECT_EQ(b[8], 'r');
	EXPECT_EQ(b[9], 'i');
	EXPECT_EQ(b[10], 'n');
	EXPECT_EQ(b[11], 'g');
	EXPECT_EQ(b[12], '!');
	EXPECT_EQ(b[13], ' ');
	EXPECT_EQ(b[14], 'Y');
	EXPECT_EQ(b[15], 'o');
	EXPECT_EQ(b[16], 'u');
	EXPECT_EQ(b[17], ' ');
	EXPECT_EQ(b[18], 'a');
	EXPECT_EQ(b[19], 'r');
	EXPECT_EQ(b[20], 'e');
	EXPECT_EQ(b[21], 'n');
	EXPECT_EQ(b[22], '\'');
	EXPECT_EQ(b[23], 't');
	EXPECT_EQ(b[24], '.');
}
